<%= form_with(model: route, local: true) do |form| %>
  <% if route.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(route.errors.count, "error") %> prohibited this route from being saved:</h2>

      <ul>
      <% route.errors.full_messages.each do |message| %>
        <li><%= message %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= form.label :title %>
    <%= form.text_field :title, id: :route_title, required: true %>
  </div>

  <!--añadir campo coordenadas que sea el array positions de javascript, guardo ese array y en la vista show pongo el mapa que renderiza
  las coordenadas-->
  <div class="field">
    <%= form.label :coordinates %>
    <%= form.text_field :coordinates %>
  </div>

  <div class="actions">
    <%= form.submit %>
  </div>
<% end %>


<!-- Geolocalization -->

<button onclick="getLocation()">Record Route</button>
<button onclick="stopLocation()">Stop Record</button>

<p id="demo"></p>


<style type="text/css">
  
  #map { height: 300px; }

</style>

<div id="map"></div>


<script>

  var x = document.getElementById("demo");
  var mymap, marker1, marker2, latitude, longitude;
  var positions = [];

  function getLocation() {
    if (navigator.geolocation) {
      navigator.geolocation.watchPosition(showPosition);
    } else {
      x.innerHTML = "Geolocation is not supported by this browser.";
      console.log("Geolocation is not suppored");
    }
  }

  function showPosition(position) {
    latitude = position.coords.latitude;
    longitude = position.coords.longitude;

    // Add position to the array
    positions.push([latitude, longitude]);

    x.innerHTML = "Latitude: " + latitude +
    "<br>Longitude: " + longitude;
    console.log(position);
  }

  function stopLocation() {
    var watchID;
    navigator.geolocation.clearWatch(watchID);
        console.log("Finished Geolocation");

        console.log(positions);

    // Drawing Map

    mymap = L.map('map').setView([latitude, longitude], 13);

    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
        maxZoom: 18,
        id: 'mapbox.streets',
        accessToken: 'pk.eyJ1IjoibW9udG9ydXdhbGtyIiwiYSI6ImNqcnhtdTcwYzBwNno0M210bnFyemRtcmcifQ.YIy7MO-M8Hgf61hkqxCl1Q'
    }).addTo(mymap);

    marker1 = L.marker(positions[0]).addTo(mymap);
    marker1.bindPopup('<p>This was your first location</p>').openPopup();

    marker2 = L.marker(positions[positions.length-1]).addTo(mymap);
    marker2.bindPopup('<p>This is your current location</p>').openPopup();

    // create a red polyline from an array of LatLng points
    var polyline = L.polyline(positions, {color: 'red'}).addTo(mymap);
    
    // zoom the map to the polyline
    mymap.fitBounds(polyline.getBounds());


  }

</script>